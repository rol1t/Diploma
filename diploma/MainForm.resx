<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuIconList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="menuIconList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAy
        CgAAAk1TRnQBSQFMAgEBBwEAASABAAEgAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABMAMAAQEBAAEgBgABSP8A/wD/ACUAA/E5/wPxAf94AAMzAU8DvQHfOP+IADz/A/EB/3gAA70B3zz/
        iAAI/zAACP94AAj/wAAI/zAACP8YADj/CAAQ/xAACP/AAAj/MAAI/xgANP8D3AH3BAADBgEIDP8D3AH3
        EAAI/wgAAzMBTwO9Ad8w/wOpAdMDKAE8eAAI/zAACP8YAANeAa8E/wO8Ae8DTAGLAyEBMAMGAQgIAAMD
        AQQDIwE0A0kBhwO8Ae8E/wNNAY8EAAMuAUcM/wNPAZMQAAj/CAADvQHfOP8DkwHDeAAI/zAACP8YAAMU
        ARwDXgGvEP8DnwHjA5QB3wPNAfMM/wNSAZsDDAEQBAADUgGbCP8DUwGfAwwBEBAACP8IAAj/MAAI/3gA
        CP8wAAj/IAADKAE8A08BkwOUAd8Q/wOHAdcDSQGHAyEBMAgAA0ABbwOBAdMDTQGPAyMBNBgACP8IAAj/
        MAAI/3gACP8wAAj/LAADBgEIAxcBIAMXASADAwEEFAADCQEMJAAI/wgACP8IABD/GAAI/3gACP8EAAPx
        Bf8IAAT/A/EB/xQACP94AAj/CAAI/wgAEP8YAAj/eAAI/wQADP8D8Qn/FAAI/ygAAxQBHANgAbMDzQHz
        A7wB7wNWAaMDDAEQBAADMAFLA80B8wO8Ae8DVgGjAwwBECAACP8IAAj/MAAI/3gACP8EABj/FAAI/yQA
        AwkBDAOPAdsQ/wNvAcMDAwEEAwYBCAO0AesI/wNvAcMDAwEEHAAI/wgACP8IACD/CAAI/3gACP8EABj/
        FAAI/yQAAzcBWwT/A4cB1wMXASADHwEsA7QB6wT/AygBPAQAA2ABswz/AygBPBwACP8IAAj/CAAg/wgA
        CP94AAj/BAAI/wPxAf8D8Qn/FAAI/yQAA0YBfwT/A0wBiwgAA1oBpwT/AzsBYwQAA1IBmwz/AzsBYxwA
        CP8IAAj/MAAI/3gACP8EAAj/CAAI/xQACP8kAAMzAVME/wOfAeMDKgFAAzABSwPNAfME/wMjATQEAANk
        AbcM/wMjATQcAAj/CAAI/wgAIP8IAAj/eAAI/wQACP8IAAj/FAAI/yQAAwMBBAN3AcsQ/wNeAa8EAAMM
        ARADzQHzCP8DXgGvIAAI/wgACP8IACD/CAAI/3gACP8EAAj/CAAI/xQACP8oAAMJAQwDTwGTA4EB0wN8
        Ac8DSQGDAwMBBAQAAywBQwOBAdMDfAHPA0kBgwMDAQQwAAj/MAAI/3gACP8EAAj/CAAI/xQACP+IAAj/
        MAAI/3gAPP8D8QH/iAADqQHTOP8DfwGzeAAD8QH/A/Ex/wPxBf+IAAMoATwDjQG/MP8DfwGzAx8BLP8A
        /wD/AP8A/wD/AIoAA/EJ//8AcQAD8RH//wBpAAPxGf+gAED/gAAD8Qn/A/EV/1gACP88AAj/A/EB/wPx
        Af8D8QH/A/EB/wPxAf8D8QH/A/EB/wPxAf8D8QH/A/EB/wPxAf8D8Qn/GAAc/wgALP8UAAPxCf8D8QX/
        BAAU/1QACP88AAj/MAAI/xgAHP8IACz/EAAD8Qn/A/EF/wQABP8EABT/UAAI/zwAA/EN/yQAA/EJ/xgA
        IP8EACj/A/EB/wwAA/EJ/wPxBf8EAAPxBf8D8QH/BAAU/0wACP9AABD/A/EB/wPxBf8EAAT/A/EV/xgA
        A/EZ/wPxAf8EAAPxKf8IAAPxCf8D8QX/BAAD8Q3/A/EB/wQAFP9IAAj/RAAD8Sn/A/EB/yAABP8D8R3/
        BAAE/wPxAf8D8Q3/A/EB/wPxBf8MABD/BAAD8Qn/A/EJ/wPxAf8EABT/RAAI/1AAA/EB/wPxCf8D8QH/
        A/EF/zAABP8D8QH/A/EB/wPxCf8D8QX/MAAQ/wPxCf8D8QH/BAAD8Qn/A/EB/wQAFP8oADj/2AAU/wPx
        Af8MAAPxCf8D8QH/BAAU/yQAOP84ABT/A/EB/1wABP8D8QX/A/EF/xwADP8D8QH/FAAD8Qn/A/EB/wQA
        FP84AAj/UAAY/wPxAf84AAT/A/EJ/wPxBf8IAAPxDf8D8QH/IAAE/wPxAf8cAAPxCf8D8QH/BAAU/zQA
        CP9MAAPxBf8D8QH/DAAI/zgAA/ER/wPxAf8IABT/SAAD8Qn/A/EB/wQAFP8wAAj/TAAI/xAACP84ABT/
        A/EB/wgAA/EN/wPxAf9MAAPxCf8D8QH/BAAU/ywACP9MAAz/DAAI/zgAGP8IAAT/A/EF/wPxBf9QAAPx
        Cf8D8QH/BAAM/wPxAf8sAAj/TAAg/zgAA/ER/wPxAf9wAAPxCf8D8RH/LAAI/1AAA/EV/zwABP8D8QX/
        A/EB/wPxAf94AAPxFf+MAAT/A/EF/wPxAf/QAAPxDf//AHUAA/EF//8A/wD/AP8AMAABQgFNAT4HAAE+
        AwABKAMAAWADAAEwAwABAQEAAQEFAAFAAQIWAAP/AQAJ/wMACf8DAAHwAQABDwP/AcABAAE/AwAB8AEA
        AQ8D/wHAAQABPwMAAfMB/wHPA/8BzwL/AwAB8wH/Ac8BwAEAAcMBzwL/AwAB8wH/Ac8BwAEAAYMBzAEA
        AQMDAAHzAf8BzwLAAYMBzAEAAQMDAAHzAf8BzwHAAQABgwHMAf8B8wMAAfMB/wHPAfABAwEPAcwB/wHz
        AwAB8wH/Ac8B/gEfAX8BzAHDAfMDAAHyAWcBzwP/AcwBwwHzAwAB8gEHAc8B/AEIAT8BzAH/AfMDAAHy
        AQcBzwH4AQABHwHMAcABMwMAAfIBBwHPAfgBBAEfAcwBwAEzAwAB8gEHAc8B+AHEAR8BzAH/AfMDAAHy
        AWcBzwH4AQQBHwHMAcABMwMAAfIBZwHPAfgBCAE/AcwBwAEzAwAB8gFnAc8B/AEIAT8B/AH/AfMDAAHy
        AWcBzwP/AfwB/wHzAwAB8AEAAQ8D/wH8AQABAwMAAfABAAEPA/8B/AEAAQMDAAn/AwAJ/wMAGP8B/gE/
        Cv8B/AEfCv8B+AEPBP8B8AEAAQ8D/wHwAQcC/wHnAf8B8AEAAQ8BwAFgAQMB4AGDAv8B5wH/AfMB/wHP
        AcABYAEDAcEBQQL/AecB/wHwAf8BjwHAASABAwGCASAC/wHnAf8B+AEIAQ8BwAEgAQMBBAEQAX8B/wHn
        Af8B/AEAAT8BwAEQAQcCCAE/Af8B5wL/AYAB/wHwAQ8B/wEAAYQBHwH4AQABHwb/AYEBwgEPAfgBAAEf
        Af8BgQL/AfwBHwHDAeEBBwH/AecC/wGAAf8B/AEMAR8B5wHwAYMB/wHnAv8BHAH/AfwBDAEfAf8B+AFB
        Af8B5wL/ATwB/wH8AQwBHwH/AfwBIAH/AecC/wEcAf8B/AEMAR8B/wH+ARAB/wHnAv8BAAH/AfwBDwP/
        AQAB/wHnAv8BgQH/AfwBHwP/AYEE/wHDBv8Bwwv/Aech/ws=
</value>
  </data>
</root>